
worker_processes auto;

events {
  accept_mutex off;
  multi_accept off;
  worker_connections 65536;
}

http {
  include mime.types;
  default_type application/octet-stream;

  access_log /dev/stdout;
  error_log /dev/stderr;

  server_tokens off;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout  65;

  gzip  on;


  include conf.d/*.conf;

  server {
    listen 80;

    location / {
      default_type text/html;
      content_by_lua_block {
        local cjson = require('cjson')
        local users = ngx.shared.users

        ngx.say(cjson.encode(users.values))
      }
    }

    location /users/ {
      default_type application/json;

      location ~/users/(?<id>[0-9]+) {
        content_by_lua_block {
          local cjson = require('cjson')
          local users = ngx.shared.users
          local id = tonumber(ngx.var.id)

          if not id or not users.values[id] then
            ngx.status = ngx.HTTP_NOT_FOUND
          else
            ngx.say(cjson.encode(users.values[id]))
          end
        }
      }

      location /users/new {
        return 200;
      }

      location ~/users/(?<id>[0-9]+)/visits {
        return 200;
      }
    }

    location /locations/ {
      location /locations/id {
        return 200;
      }
      location /locations/new {
        return 200;
      }
      location /locations/id/avg {
        return 200;
      }
    }

    location /visits/ {
      location /visits/id {
        return 200;
      }
      location /visits/new {
        return 200;
      }
    }
  }
}

